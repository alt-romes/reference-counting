[ ] Write testsuite
[ ] Include a tutorial in the README
[-] If we require the free function on "forget" we might be able to instance Functor, but then how would "get" work?
[-] Perhaps we can make use of the Dupable instance to get rid of the countable instance?
    No, that's quite orthogonal
[-] Instance Dupable and Consumable for aliased things. Instead we have Forgettable and Shareable
[x] Use name Aliased instead of RefC?
[x] Wait for ghc patch to Cmm parser
[x] Wait for Bodigrim's PR on atomic-counter
[x] Report segfaults on atomic-counter benchmarks
[ ] Use Unlifted Counter instead: https://hackage.haskell.org/package/atomic-counter-0.1.1/docs/Control-Concurrent-Counter-Unlifted.html

